import React, { useState, useEffect, useCallback } from 'react';
import { useSelector } from 'react-redux';
import { RootState } from '@/redux/store';
import { useDispatch } from 'react-redux';

import LayoutPage from '@/components/LayoutPage';
import { getBorrowEquipmentList, updateBorrowEquipmentStatus } from '@/lib/service/borrowEquipment';
import { openModalAlert } from '@/redux/features/modal';

import { Card, Container, Row, Form, Button, Table, Modal } from 'react-bootstrap';
import moment from 'moment';
import axios from 'axios';
import { replyNotificationSendBorrow } from '@/utils/apiLineReply'; // ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ path ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏£‡∏¥‡∏á‡∏≠‡∏¢‡∏π‡πà

const defaultShowState = {
  isShow: false,
  title: '',
  body: {
    borrow_id: 0,
    users_id_ref: {
      users_fname: '',
      users_sname: ''
    },
    borrow_name: '',
    borrow_date: '',
    borrow_return: '',
    borrow_equipment_status: 1,
    borrow_approver_ref: {
      users_fname: '',
      users_sname: ''
    },
    borrow_approver_date: '',
    borrowequipment_list: []
  }
};

const BorrowEquipment = () => {
  const user = useSelector((state: RootState) => state.user.user);
  const dispatch = useDispatch();

  const [validated, setValidated] = useState(false);
  const [show, setShow] = useState(defaultShowState);
  const [showQuestionnaire, setShowQuestionnaire] = useState({ isShow: false, title: '', body: {} });
  const [borrowEquipmentList, setBorrowEquipmentList] = useState<any[]>([]);

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏à‡∏≤‡∏Å model equipment)
  const [equipmentListAll, setEquipmentListAll] = useState<any[]>([]);
  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Å‡πá‡∏ö equipment_id ‡∏ó‡∏µ‡πà‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  const [selectedEquipmentId, setSelectedEquipmentId] = useState<number | null>(null);

  // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà)
  const [startDate, setStartDate] = useState<string>('');
  const [endDate, setEndDate] = useState<string>('');

  const borrow_equipment_status = React.createRef<HTMLSelectElement>();

  useEffect(() => {
    getBorrowEquipmentListData('', '', '');
    fetchAllEquipment();
  }, []);

  const getBorrowEquipmentListData = useCallback(async (name: string, name_borrow: string, status: string) => {
    try {
      const res = await getBorrowEquipmentList(name, name_borrow, status);
      if (res.data) {
        setBorrowEquipmentList(res.data);
      }
    } catch (error) {
      console.log("üöÄ ~ getBorrowEquipmentListData ~ error:", error);
    }
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å API (‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç)
  const fetchAllEquipment = async () => {
    try {
      const res = await axios.get('/api/borrowequipment/getAvailableEquipment');
      if (res.data?.data) {
        setEquipmentListAll(res.data.data);
      } else {
        setEquipmentListAll(res.data);
      }
    } catch (error) {
      console.error('Error fetching equipment:', error);
    }
  };

  // ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏∑‡∏° ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏° 90 ‡∏ß‡∏±‡∏ô)
  const handleStartDateChange = (value: string) => {
    setStartDate(value);
    if (value) {
      const calculatedEndDate = moment(value).add(90, 'days').format('YYYY-MM-DD');
      setEndDate(calculatedEndDate);
    } else {
      setEndDate('');
    }
  };

  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    event.stopPropagation();
    const form = event.currentTarget;
    if (form.checkValidity() === false) {
      setValidated(true);
      return;
    }
    await getBorrowEquipmentListData(form['name_user'].value, form['name_borrow'].value, form['status'].value);
  };

  const handleClose = () => {
    setShow(defaultShowState);
    setShowQuestionnaire({ isShow: false, title: '', body: {} });
    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï state ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
    setSelectedEquipmentId(null);
    setStartDate('');
    setEndDate('');
  };

  const handleSaveBorrow = useCallback(async () => {
    try {
      const borrow_equipment_status_value = borrow_equipment_status.current?.value;
      if (!borrow_equipment_status_value || !show.body.borrow_id || !user.userId) {
        return;
      }
      // 1) ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏° (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏î‡∏¥‡∏°)
      await updateBorrowEquipmentStatus(
        parseInt(borrow_equipment_status_value),
        user.userId,
        show.body.borrow_id
      );
      // 2) ‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÅ‡∏•‡∏∞‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏° (‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î) ‡πÅ‡∏•‡πâ‡∏ß
      if (selectedEquipmentId && startDate && endDate) {
        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°‡∏•‡∏á‡πÉ‡∏ô borrowequipment_list
        await axios.post('/api/borrowequipment_list/add', {
          borrow_id: show.body.borrow_id,
          equipment_id: selectedEquipmentId,
          borrow_start_date: startDate,
          borrow_end_date: endDate,
        });
      }
      handleClose();
      dispatch(openModalAlert({ show: true, message: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }));
      await getBorrowEquipmentListData('', '', '');
    } catch (error) {
      console.log("üöÄ ~ handleSaveBorrow ~ error", error);
      dispatch(openModalAlert({ show: true, message: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' }));
    }
  }, [
    borrow_equipment_status,
    show,
    user,
    selectedEquipmentId,
    startDate,
    endDate,
    dispatch,
    getBorrowEquipmentListData
  ]);

  return (
    <LayoutPage>
      <Container fluid>
        <Row className="py-3">
          <Card className="card-stats card-dashboard shadow mb-4 mb-xl-0 p-0">
            <Card.Header>
              <Card.Title>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Card.Title>
            </Card.Header>
            <Card.Body>
              <Form onSubmit={(e) => handleSubmit(e)} noValidate validated={validated} className="row p-2">
                <Form.Group className="col">
                  <Form.Label>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</Form.Label>
                  <Form.Control type="text" name="name_user" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏" />
                </Form.Group>
                <Form.Group className="col">
                  <Form.Label>‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ </Form.Label>
                  <Form.Control type="text" name="name_borrow" placeholder="‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏" />
                </Form.Group>
                <Form.Group className="col">
                  <Form.Label>‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</Form.Label>
                  <Form.Select name={'status'}>
                    <option value={''}>{'‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'}</option>
                    <option value={'1'}>{'‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                    <option value={'2'}>{'‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                    <option value={'3'}>{'‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                  </Form.Select>
                </Form.Group>
                <Form.Group className="col d-flex align-items-end">
                  <Button variant="primary" type="submit">
                    ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤
                  </Button>
                </Form.Group>
              </Form>
            </Card.Body>
          </Card>
        </Row>
        <Row>
          <Card className="card-stats card-dashboard shadow mb-4 mb-xl-0 p-0">
            <Card.Header>
              <p className="m-0">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏Ñ‡∏£‡∏∏‡∏†‡∏±‡∏ì‡∏ë‡πå</p>
            </Card.Header>
            <Card.Body>
            <Table striped bordered hover>
  <thead>
    <tr>
      <th className="px-2">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
      <th className="px-2">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</th>
      <th className="px-2">‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</th>
      <th className="px-2">‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°</th>
      <th className="px-2">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠</th>
      <th className="px-2">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î</th>
      <th className="px-2">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</th>
      <th className="px-2">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠</th>
      <th className="px-2">‡πÅ‡∏à‡πâ‡∏á</th> {/* ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
    </tr>
  </thead>
  <tbody>
    {borrowEquipmentList.map((item: any, index: number) => {
      return (
        <tr key={index}>
          <td className="px-2">{index + 1}</td>
          <td className="px-2">
            {item.users_id_ref.users_fname + ' ' + item.users_id_ref.users_sname}
          </td>
          <td className="px-2">{item.borrow_name}</td>
          <td className="px-2">
            <Button
              variant="link"
              className="p-0 btn-edit"
              onClick={() =>
                setShowQuestionnaire({ isShow: true, title: item.borrow_name, body: '' })
              }
            >
              <i className="fa-solid fa-file"></i>
            </Button>
          </td>
          <td className="px-2">{moment(item.borrow_date).format('DD-MM-YYYY')}</td>
          <td className="px-2">
            {item.borrow_return ? moment(item.borrow_return).format('DD-MM-YYYY') : '-'}
          </td>
          <td className="px-2">
            {item.borrow_equipment_status === 1
              ? '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'
              : item.borrow_equipment_status === 2
              ? <span className="alert-success">{'‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</span>
              : <span className="alert-danger">{'‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</span>}
          </td>
          <td className="px-2">
            <Button
              variant="link"
              className="p-0 btn-edit"
              onClick={() => setShow({ isShow: true, title: item.borrow_name, body: item })}
            >
              <i className="fas fa-edit"></i>
            </Button>
          </td>
          {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô */}
          <td className="px-2">
            <Button
              variant="success"
              onClick={() => replyNotificationSendBorrow({
                replyToken: item.reply_token, // ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ô‡∏µ‡πâ‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ
                userData: item // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏¢‡∏∑‡∏°
              })}
            >
              ‡∏™‡πà‡∏á
            </Button>
          </td>
        </tr>
      );
    })}
  </tbody>
</Table>

            </Card.Body>
          </Card>
        </Row>

        {/* Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏π/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏° */}
        <Modal show={show.isShow} onHide={() => handleClose()} size="lg">
          <Modal.Header closeButton>
            <Modal.Title>{show.title}</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <Table striped bordered hover>
              <tbody>
                <tr>
                  <td className="px-2">{'‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                  <td className="px-2">
                    {show.body.users_id_ref.users_fname} {show.body.users_id_ref.users_sname}
                  </td>
                </tr>
                <tr>
                  <td className="px-2">{'‡∏ä‡∏∑‡πà‡∏≠-‡∏™‡∏Å‡∏∏‡∏• ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                  <td className="px-2">{show.body.borrow_name}</td>
                </tr>
                <tr>
                  <td className="px-2">{'‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠'}</td>
                  <td className="px-2">{moment(show.body.borrow_date).format('DD-MM-YYYY')}</td>
                </tr>
                <tr>
                  <td className="px-2">{'‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡∏ô‡∏™‡∏∏‡∏î'}</td>
                  <td className="px-2">
                    {show.body.borrow_return ? moment(show.body.borrow_return).format('DD-MM-YYYY') : '-'}
                  </td>
                </tr>
                <tr>
                  <td className="px-2">{'‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'}</td>
                  <td className="px-2">
                    {show.body.borrow_equipment_status === 1
                      ? '‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'
                      : show.body.borrow_equipment_status === 2
                      ? <span className="alert-success">{'‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</span>
                      : <span className="alert-danger">{'‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</span>}
                  </td>
                </tr>
                <tr>
                  <td className="px-2">{'‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</td>
                  <td className="px-2">
                    {show.body.borrow_approver_ref?.users_fname} {show.body.borrow_approver_ref?.users_sname}
                  </td>
                </tr>
                <tr>
                  <td className="px-2">{'‡∏ú‡∏π‡πâ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà'}</td>
                  <td className="px-2">
                    {show.body.borrow_approver_date ? moment(show.body.borrow_approver_date).format('DD-MM-YYYY') : ''}
                  </td>
                </tr>
              </tbody>
            </Table>
            {/* <Form.Group>
              <Form.Label>‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏¢‡∏∑‡∏°</Form.Label>
              <Table striped bordered hover>
                <thead>
                  <tr>
                    <th className="px-2">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
                    <th className="px-2">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
                    <th className="px-2">ID ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á</th>
                  </tr>
                </thead>
                <tbody>
                  {show.body.borrowequipment_list.map((item: any, index: number) => (
                    <tr key={index}>
                      <td className="px-2">{index + 1}</td>
                      <td className="px-2">{item.equipment?.equipment_name || '-'}</td>
                      <td className="px-2">{item.equipment?.equipment_code || '-'}</td>
                    </tr>
                  ))}
                </tbody>
              </Table>
            </Form.Group> */}

            {/* ‡∏™‡πà‡∏ß‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°: ‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå (‡∏î‡∏∂‡∏á‡∏à‡∏≤‡∏Å equipmentListAll) ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà */}
            <hr />
            <h5>‡πÄ‡∏û‡∏¥‡πà‡∏°/‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏ä‡∏∏‡∏î‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå (‡πÇ‡∏î‡∏¢‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà)</h5>
            <Form.Group className="mb-3">
              <Form.Label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</Form.Label>
              <Form.Select
                value={selectedEquipmentId ?? ''}
                onChange={(e) => setSelectedEquipmentId(Number(e.target.value))}
              >
                <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå --</option>
                {equipmentListAll.map((eq) => (
                  <option key={eq.equipment_id} value={eq.equipment_id}>
                    {eq.equipment_name} ({eq.equipment_code})
                  </option>
                ))}
              </Form.Select>
            </Form.Group>
            <Form.Group className="mb-3">
              <Form.Label>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏¢‡∏∑‡∏°</Form.Label>
              <Form.Control
                type="date"
                value={startDate}
                onChange={(e) => handleStartDateChange(e.target.value)}
              />
            </Form.Group>
            {startDate && (
              <p>
                ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î (90 ‡∏ß‡∏±‡∏ô): <strong>{endDate || '-'}</strong>
              </p>
            )}
            <hr />
            <Form.Group>
              <Form.Label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</Form.Label>
              <Form.Select name={'borrow_equipment_status'} ref={borrow_equipment_status}>
                <option value="">{'‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞'}</option>
                <option value="1">{'‡∏£‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                <option value="2">{'‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
                <option value="3">{'‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥'}</option>
              </Form.Select>
            </Form.Group>
          </Modal.Body>
          <Modal.Footer>
            <Button variant="secondary" onClick={() => handleClose()}>
              ‡∏õ‡∏¥‡∏î
            </Button>
            <Button variant="primary" onClick={() => handleSaveBorrow()}>
              ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
            </Button>
          </Modal.Footer>
        </Modal>

        {/* Modal ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏° */}
        <Modal show={showQuestionnaire.isShow} onHide={() => handleClose()} size="lg">
          <Modal.Header closeButton>
            <Modal.Title>{'‡πÅ‡∏ö‡∏ö‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</Modal.Title>
          </Modal.Header>
          <Modal.Body>
            <h5>‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏</h5>
            <Table striped bordered hover>
              <tbody>
                <tr>
                  <td className="px-2">{'1.‡πÄ‡∏û‡∏®'}</td>
                  <td className="px-2">{'‡∏´‡∏ç‡∏¥‡∏á'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'2.‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                  <td className="px-2">{'70'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'3.‡∏™‡∏ñ‡∏≤‡∏ô‡∏†‡∏≤‡∏û‡∏™‡∏°‡∏£‡∏™'}</td>
                  <td className="px-2">{'‡∏™‡∏°‡∏£‡∏™'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'4.‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß'}</td>
                  <td className="px-2">{'‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏£‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'5.‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤'}</td>
                  <td className="px-2">{'‡∏°‡∏±‡∏ò‡∏¢‡∏°‡∏®‡∏∂‡∏Å‡∏©‡∏≤'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'6.‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ'}</td>
                  <td className="px-2">{'‡∏ï‡∏ô‡πÄ‡∏≠‡∏á'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'7.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡∏ï‡πà‡∏≠‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà'}</td>
                  <td className="px-2">{'‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏û‡∏µ‡∏¢‡∏á‡∏û‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡∏µ‡πâ‡∏™‡∏¥‡∏ô'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'8.‡∏ó‡πà‡∏≤‡∏ô‡∏°‡∏µ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡πç‡∏≤‡∏ï‡∏±‡∏ß'}</td>
                  <td className="px-2">{'‡πÑ‡∏°‡πà‡∏°‡∏µ'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'9.‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤'}</td>
                  <td className="px-2">{'‡πÑ‡∏°‡πà‡∏à‡πç‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏¢‡∏≤'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'10.‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û'}</td>
                  <td className="px-2">{'‡∏™‡∏∞‡∏î‡∏ß‡∏Å‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'11.‡∏Å‡∏≤‡∏£‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏'}</td>
                  <td className="px-2">{'‡∏°‡∏µ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'12.‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°'}</td>
                  <td className="px-2">{'‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ä‡∏°‡∏£‡∏°‡∏ú‡∏π‡πâ‡∏™‡∏π‡∏á‡∏≠‡∏≤‡∏¢‡∏∏ ‡πÅ‡∏•‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏Å‡∏¥‡∏à‡∏Å‡∏£‡∏£‡∏°‡πÑ‡∏°‡πà  ‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ (‡∏ô‡πâ‡∏≠‡∏¢‡∏Å‡∏ß‡πà‡∏≤ 8 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ï‡πà‡∏≠‡∏õ‡∏µ)'}</td>
                </tr>
              </tbody>
            </Table>
            <h5>‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏¥‡∏à‡∏ß‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ß‡∏±‡∏ô</h5>
            <Table striped bordered hover>
              <tbody>
                <tr>
                  <td className="px-2">{'1.‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏ó‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏™‡πç‡∏≤‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡∏ï‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤ '}</td>
                  <td className="px-2">{'1 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ï‡∏±‡∏Å‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏ô‡∏ä‡πà‡∏ß‡∏¢ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡πà‡∏ß‡∏¢‡πÉ‡∏ä‡πâ‡∏ä‡πâ‡∏≠‡∏ô‡∏ï‡∏±‡∏Å‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÑ‡∏ß‡πâ'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'2.‡∏Å‡∏≤‡∏£‡∏•‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤ ‡∏´‡∏ß‡∏µ‡∏ú‡∏° ‡πÅ‡∏õ‡∏£‡∏á‡∏ü‡∏±‡∏ô ‡πÇ‡∏Å‡∏ô‡∏´‡∏ô‡∏ß‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤ 24‚Äì48 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤'}</td>
                  <td className="px-2">{'1 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ó‡πç‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á (‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ó‡πç‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á‡∏ñ‡πâ‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ)'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'3.‡∏•‡∏∏‡∏Å‡∏ô‡∏±‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏≤‡∏Å‡πÄ‡∏ï‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏Å‡πâ‡∏≤‡∏≠‡∏µ‡πâ'}</td>
                  <td className="px-2">{'3 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ó‡πç‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'4.‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥'}</td>
                  <td className="px-2">{'2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏î‡∏µ (‡∏Ç‡∏∂‡πâ‡∏ô‡∏ô‡∏±‡πà‡∏á‡πÅ‡∏•‡∏∞‡∏•‡∏á‡∏à‡∏≤‡∏Å‡πÇ‡∏ñ‡∏™‡πâ‡∏ß‡∏°‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ ‡∏ó‡πç‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏ò‡∏∏‡∏£‡∏∞ ‡∏ñ‡∏≠‡∏î‡πÉ‡∏™‡πà‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'5.‡∏Å‡∏≤‡∏£‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏ö‡πâ‡∏≤‡∏ô '}</td>
                  <td className="px-2">{'3 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡πÄ‡∏î‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'6.‡∏Å‡∏≤‡∏£‡∏™‡∏ß‡∏°‡πÉ‡∏™‡πà‡πÄ‡∏™‡∏∑‡πâ‡∏≠‡∏ú‡πâ‡∏≤'}</td>
                  <td className="px-2">{'2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏î‡∏µ '}</td>
                </tr>
                <tr>
                  <td className="px-2">{'7.‡∏Å‡∏≤‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏•‡∏á‡∏ö‡∏±‡∏ô‡πÑ‡∏î 1 ‡∏ä‡∏±‡πâ‡∏ô'}</td>
                  <td className="px-2">{'2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Ç‡∏∂‡πâ‡∏ô‡∏•‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏î‡∏¥‡∏ô ‡πÄ‡∏ä‡πà‡∏ô Walker ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏≠‡∏≤‡∏Ç‡∏∂‡πâ‡∏ô‡∏•‡∏á‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢)'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'8.‡∏Å‡∏≤‡∏£‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥'}</td>
                  <td className="px-2">{'1 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏≠‡∏≤‡∏ö‡∏ô‡πâ‡∏≥‡πÑ‡∏î‡πâ‡πÄ‡∏≠‡∏á'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'9.‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡πâ‡∏ô‡∏Å‡∏≤‡∏£‡∏ñ‡πà‡∏≤‡∏¢‡∏≠‡∏∏‡∏à‡∏à‡∏≤‡∏£‡∏∞ ‡πÉ‡∏ô 1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤'}</td>
                  <td className="px-2">{'2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Å‡∏•‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥'}</td>
                </tr>
                <tr>
                  <td className="px-2">{'10.	‡∏Å‡∏≤‡∏£‡∏Å‡∏•‡∏±‡πâ‡∏ô‡∏õ‡∏±‡∏™‡∏™‡∏≤‡∏ß‡∏∞‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞ 1 ‡∏™‡∏±‡∏õ‡∏î‡∏≤‡∏´‡πå‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏°‡∏≤'}</td>
                  <td className="px-2">{'2 ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏Å‡∏•‡∏±‡πâ‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥'}</td>
                </tr>
              </tbody>
            </Table>
          </Modal.Body>
          <Modal.Footer>
            <Button variant="secondary" onClick={() => handleClose()}>
              ‡∏õ‡∏¥‡∏î
            </Button>
          </Modal.Footer>
        </Modal>
      </Container>
    </LayoutPage>
  );
};

export default BorrowEquipment;
