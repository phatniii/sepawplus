import { NextApiRequest, NextApiResponse } from 'next' 
import prisma from '@/lib/prisma'
import { replyNotificationSOS } from '@/utils/apiLineReply'

let lastSentSOS: { [key: string]: number } = {}; // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á SOS ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ UID

export default async function handle(req: NextApiRequest, res: NextApiResponse) {
    if (req.method !== 'POST') {
        res.setHeader('Allow', ['POST']);
        return res.status(405).json({ message: `‚ùå ‡∏ß‡∏¥‡∏ò‡∏µ ${req.method} ‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï` });
    }

    if (req.headers['content-type'] !== 'application/json') {
        return res.status(400).json({ message: '‚ùå error', data: "Content-Type ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô application/json" });
    }

    const { uid, device_id } = req.body;
    console.log("üì• Received SOS Request:", req.body);

    if (!uid || !device_id) {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå uid ‡∏´‡∏£‡∏∑‡∏≠ device_id");
        return res.status(400).json({ message: '‚ùå error', data: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå uid ‡∏´‡∏£‡∏∑‡∏≠ device_id' });
    }

    if (isNaN(Number(uid))) {
        console.log("‚ùå uid ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç:", uid);
        return res.status(400).json({ message: '‚ùå error', data: 'uid ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç' });
    }

    // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á SOS ‡∏ã‡πâ‡∏≥‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 1 ‡∏ô‡∏≤‡∏ó‡∏µ
    const sosKey = `${uid}_${device_id}`;
    if (lastSentSOS[sosKey] && Date.now() - lastSentSOS[sosKey] < 60000) {
        console.log(`‚è≥ SOS ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UID: ${uid} (Device: ${device_id}), ‡∏£‡∏≠ ${60 - Math.floor((Date.now() - lastSentSOS[sosKey]) / 1000)} ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ`);
        return res.status(200).json({ message: '‚úÖ success', data: '‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° SOS ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡πÅ‡∏•‡πâ‡∏ß' });
    }

    lastSentSOS[sosKey] = Date.now(); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏•‡∏≤‡∏™‡πà‡∏á‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î

    try {
        const user = await prisma.users.findFirst({ where: { users_id: Number(uid) } });

        if (!user) {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ");
            return res.status(400).json({ message: '‚ùå error', data: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ' });
        }

        const takecareperson = await prisma.takecareperson.findFirst({
            where: {
                users_id: user.users_id,
                takecare_status: 1
            }
        });

        if (!takecareperson) {
            console.log("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•");
            return res.status(400).json({ message: '‚ùå error', data: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•' });
        }

        const message = `üö® ‡∏Ñ‡∏∏‡∏ì ${takecareperson.takecare_fname} ${takecareperson.takecare_sname} \n‡∏Ç‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏â‡∏∏‡∏Å‡πÄ‡∏â‡∏¥‡∏ô‡∏à‡∏≤‡∏Å‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç ${device_id}!`;
        console.log("üì§ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á LINE ID:", user.users_line_id);

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ users_line_id ‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô null
        const replyToken = user.users_line_id || '';
        if (!replyToken) {
            console.log("‚ùå users_line_id ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏ß‡πà‡∏≤‡∏á");
            return res.status(400).json({ message: '‚ùå error', data: 'users_line_id ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á' });
        }

        await replyNotificationSOS({ replyToken, message });

        console.log("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
        return res.status(200).json({ message: '‚úÖ success', data: user });
    } catch (error) {
        console.error("‚ùå Error:", error);
        return res.status(500).json({ message: '‚ùå error', data: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•' });
    }
}
